{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","timerId","state","currentTime","Date","toLocaleTimeString","this","setInterval","updateCurrentTime","previousClockName","clockName","newClockName","props","console","log","clearInterval","setState","className","React","Component","App","isClockVisible","Math","floor","random","showClock","hideClock","renameClock","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"2OAYaA,EAAb,4MACEC,QAA+B,KADjC,EAGEC,MAAe,CACbC,aAAa,IAAIC,MAAOC,sBAJ5B,uDAOE,WAAqB,IAAD,OAClBC,KAAKL,QAAUM,aAAY,WACzB,EAAKC,sBAGJ,OAZP,gCAeE,YAA6D,IAA7BC,EAA4B,EAAvCC,UACAC,EAAiBL,KAAKM,MAAjCF,UAEJD,IAAsBE,GAExBE,QAAQC,IAAR,qCAA0CL,EAA1C,eAAkEE,MApBxE,iCAwBE,WACML,KAAKL,SACPc,cAAcT,KAAKL,WA1BzB,+BA8BE,WACEK,KAAKU,SAAS,CACZb,aAAa,IAAIC,MAAOC,yBAhC9B,oBAoCE,WACE,IAAQF,EAAgBG,KAAKJ,MAArBC,YAER,OAAO,mBAAGc,UAAU,eAAb,SAA6Bd,QAvCxC,GAA2Be,IAAMC,WCD3BC,G,kNACJlB,MAAe,CACbmB,gBAAgB,EAChBX,UAAWY,KAAKC,MAAsB,IAAhBD,KAAKE,W,EAG7BC,UAAY,WACV,EAAKT,SAAS,CACZK,gBAAgB,K,EAIpBK,UAAY,WACV,EAAKV,SAAS,CACZK,gBAAgB,K,EAIpBM,YAAc,WACZ,EAAKX,SAAS,CACZN,UAAWY,KAAKC,MAAsB,IAAhBD,KAAKE,a,4CAI/B,WACE,MAAsClB,KAAKJ,MAAnCmB,EAAR,EAAQA,eAAgBX,EAAxB,EAAwBA,UAExB,OACE,sBAAKO,UAAU,MAAf,UACGI,GAAkB,cAAC,EAAD,CAAOX,UAAWA,IAErC,sBAAKO,UAAU,UAAf,UACE,wBAAQW,KAAK,SAASC,QAASvB,KAAKmB,UAApC,wBAGA,wBAAQG,KAAK,SAASC,QAASvB,KAAKoB,UAApC,wBAGA,wBAAQE,KAAK,SAASC,QAASvB,KAAKqB,YAApC,oC,GAtCQT,IAAMC,YA+CTC,ICvDfU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b8ca08fb.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Clock.scss';\n\ntype State = {\n  currentTime: string;\n};\n\ntype Props = {\n  clockName: number;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  timerId: NodeJS.Timer | null = null;\n\n  state: State = {\n    currentTime: new Date().toLocaleTimeString(),\n  };\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.updateCurrentTime();\n      // eslint-disable-next-line no-console\n      // console.log(this.state.currentTime);\n    }, 1000);\n  }\n\n  componentDidUpdate({ clockName: previousClockName }: Props) {\n    const { clockName: newClockName } = this.props;\n\n    if (previousClockName !== newClockName) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from ${previousClockName} to ${newClockName}`);\n    }\n  }\n\n  componentWillUnount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  updateCurrentTime() {\n    this.setState({\n      currentTime: new Date().toLocaleTimeString(),\n    });\n  }\n\n  render() {\n    const { currentTime } = this.state;\n\n    return <p className=\"current-time\">{currentTime}</p>;\n  }\n}\n","import React from 'react';\n\nimport { Clock } from './components/Clock';\n\nimport './App.scss';\n\ntype State = {\n  isClockVisible: boolean;\n  clockName: number;\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    isClockVisible: true,\n    clockName: Math.floor(Math.random() * 100),\n  };\n\n  showClock = () => {\n    this.setState({\n      isClockVisible: true,\n    });\n  };\n\n  hideClock = () => {\n    this.setState({\n      isClockVisible: false,\n    });\n  };\n\n  renameClock = () => {\n    this.setState({\n      clockName: Math.floor(Math.random() * 100),\n    });\n  };\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        {isClockVisible && <Clock clockName={clockName} />}\n\n        <div className=\"buttons\">\n          <button type=\"button\" onClick={this.showClock}>\n            Show Clock\n          </button>\n          <button type=\"button\" onClick={this.hideClock}>\n            Hide Clock\n          </button>\n          <button type=\"button\" onClick={this.renameClock}>\n            Rename Clock\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}